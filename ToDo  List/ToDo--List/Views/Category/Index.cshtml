@using System.Security.Claims;
@model IEnumerable<ToDo__List.Models.Category>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/CategoryLayout.cshtml";
}

<h1>Welcome, @User.FindFirstValue(ClaimTypes.Name)!</h1>

    <p>     
        Lorem Ipsum is simply dummy text of the printing and typesetting industry. 
        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, 
        when an unknown printer took a galley of type and scrambled it to make a type specimen book.
    </p>

<h2>Create and Manage your Tasks</h2>

    <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec laoreet et mauris vitae semper. 
        Quisque vel turpis nibh. Nunc pellentesque dictum velit eget blandit. Class aptent taciti sociosqu ad 
        litora torquent per conubia nostra, per inceptos himenaeos. Fusce vel mattis felis. Donec a tempor nunc. 
        Donec a eros at libero eleifend aliquet. Pellentesque a porta mauris, at pulvinar ipsum. Curabitur aliquam 
        laoreet urna id egestas. Aliquam id felis eu velit suscipit venenatis vitae vitae lacus. Fusce tempor quam id lectus rutrum, 
        et suscipit ipsum commodo. Ut aliquam ex eu leo faucibus, ac tincidunt augue ornare. Praesent et diam massa. 
        Sed mattis mollis metus, vitae fermentum turpis sagittis vel.
    </p>

<p>
    <a asp-action="Create" style="text-decoration:none"><button class="btn btn-primary">Create New</button></a>
</p>
<table class="table table-hover">
    <thead class="">
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Categories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tasks)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Priority)*@
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>*@
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-active">
                @*<td>
                <input type="checkbox" id="completedCheckbox_@item.ID" />
                </td>*@
                <td>
                    <input type="checkbox" id="completedCheckbox_@item.ID" data-category="@item.Categories" data-task="@item.Tasks" data-status="@item.Status" data-enddate="@item.EndDate" />
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Categories)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tasks)
                </td>
                <td>
                    <span id="status-@item.ID"></span>
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>*@
                <td>
                    @if (item.Priority == "High")
                    {
                        <span class="priority-radio high"></span>
                    }
                    else if (item.Priority == "Mid")
                    {
                        <span class="priority-radio mid"></span>
                    }
                    else if (item.Priority == "Low")
                    {
                        <span class="priority-radio low"></span>
                    }
                </td>
                <td typeof="submit">
                    <a asp-action="Edit" asp-route-id="@item.ID"><button class="btn btn-secondary"><i class="bi bi-pencil-square"></i>Edit</button></a>
                </td>
                <td typeof="submit">
                    <a asp-action="Delete" asp-route-id="@item.ID"><button class="btn btn-danger"><i class="bi bi-trash3"></i>Delete</button></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Set Task Status</h5>
            </div>
            <div class="modal-body">
                <p>Do you want to set the task status to checked?</p>
                <dl class="row">
                    <dt class="col-sm-2">Category</dt>
                    <dd class="col-sm-10" id="taskCategory"></dd>
                    <dt class="col-sm-2">Task</dt>
                    <dd class="col-sm-10" id="taskName"></dd>
                    <dt class="col-sm-2">Status</dt>
                    <dd class="col-sm-10" id="taskStatus"></dd>
                    <dt class="col-sm-2">End Date</dt>
                    <dd class="col-sm-10" id="taskEndDate"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmButton">Submit</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            function calculateRemainingDays(endDate, elementId) {
                var today = new Date();
                var remainingDays = Math.ceil((endDate - today) / (1000 * 60 * 60 * 24));

                if (remainingDays >= 2) {
                    $('#' + elementId).text(remainingDays + ' days left');
                }
                else if (remainingDays == 0) {
                    $('#' + elementId).text('Due Today').addClass('red-text');
                }
                else if (remainingDays == 1) {
                    $('#' + elementId).text('Due Tomorrow').addClass('blue-text');
                }
                else {
                    $('#' + elementId).text('Expired').addClass('red-text');
                }
            }

            @foreach (var item in Model)
            {
                <text>
                    calculateRemainingDays(new Date('@item.EndDate'), 'status-@item.ID');
                </text>
            }
        });

        $(document).ready(function () {
            $('input[type="checkbox"]').click(function () {
                var checkbox = $(this);
                var category = checkbox.data('category');
                var task = checkbox.data('task');
                var status = checkbox.data('status');
                var endDate = checkbox.data('enddate');

                $('#taskCategory').text(category);
                $('#taskName').text(task);
                $('#taskStatus').text(status);
                $('#taskEndDate').text(endDate);

                $('#confirmButton').click(function () {
                    // Handle the checkbox confirmation logic here
                    checkbox.prop('checked', true);
                    $('#myModal').modal('hide');
                });

                $('#myModal').modal('show');
            });

            // Add event listener to the cancel button
            $('.modal-footer button[data-dismiss="modal"]').click(function () {
                // Close the modal
                $('#myModal').modal('hide');
            });
        });


    </script>
}

